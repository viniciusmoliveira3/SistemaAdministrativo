// <auto-generated />
using System;
using Colex.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Colex.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20240917213806_TirandoObrigatoriedadeColuna")]
    partial class TirandoObrigatoriedadeColuna
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Colex.Models.Capacidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CapacidadeCarga")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.ToTable("Capacidade", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Bairro")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<long>("CEP")
                        .HasColumnType("bigint");

                    b.Property<long>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<string>("Cidade")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("EnderecoSocial")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("IdRepresentante")
                        .HasColumnType("integer");

                    b.Property<long>("InscricaoEstadual")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.HasIndex("IdRepresentante");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Certificado")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("date");

                    b.Property<int?>("IdFornecedor")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Lote")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<long?>("NF")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<float?>("Quantidade")
                        .HasColumnType("real");

                    b.Property<float?>("QuantidadeAtual")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Componente", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Extintor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("CapacExtintora")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("EnsaioHidrostatico")
                        .HasColumnType("int");

                    b.Property<int>("IdCapacidade")
                        .HasColumnType("integer");

                    b.Property<int>("IdMarcaExtintor")
                        .HasColumnType("integer");

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("integer");

                    b.Property<string>("Lote")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("NBR")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("NumPatrimonio")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NumeroCilindro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Projeto")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("ProximoEnsaioHisdrostatico")
                        .HasColumnType("int");

                    b.Property<long>("SeloAnterior")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdCapacidade");

                    b.HasIndex("IdMarcaExtintor");

                    b.HasIndex("IdMateriaPrima");

                    b.ToTable("Extintor", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Bairro")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<long>("CEP")
                        .HasColumnType("bigint");

                    b.Property<long>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<string>("Cidade")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("EnderecoSocial")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<long>("InscricaoEstadual")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("Colex.Models.MarcaExtintor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("MarcaExtintor", (string)null);
                });

            modelBuilder.Entity("Colex.Models.MateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Batelada")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Certificado")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("date");

                    b.Property<int?>("IdFornecedor")
                        .HasColumnType("integer");

                    b.Property<string>("LoteInterno")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("NF")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<float?>("Quantidade")
                        .HasColumnType("real");

                    b.Property<float?>("QuantidadeAtual")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("MateriaPrima", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Orcamento", b =>
                {
                    b.Property<int>("IdOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOrcamento"));

                    b.Property<long?>("Cep")
                        .HasColumnType("bigint");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Comprador")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataModificacao")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<string>("Nota")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("ValorFinal")
                        .HasColumnType("decimal");

                    b.Property<string>("Vendedor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("IdOrcamento");

                    b.HasIndex("IdCliente");

                    b.ToTable("Orcamento", (string)null);
                });

            modelBuilder.Entity("Colex.Models.OrcamentoProduto", b =>
                {
                    b.Property<int>("IdOrcamentoProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOrcamentoProduto"));

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("integer");

                    b.Property<int>("IdOrcamento")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ValorUnitario")
                        .HasColumnType("decimal");

                    b.HasKey("IdOrcamentoProduto");

                    b.HasIndex("IdMateriaPrima");

                    b.HasIndex("IdOrcamento");

                    b.ToTable("OrcamentoProduto", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Os", b =>
                {
                    b.Property<int>("IdOServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOServico"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdRepresentante")
                        .HasColumnType("integer");

                    b.Property<long>("NumeroOrdemServico")
                        .HasColumnType("bigint");

                    b.HasKey("IdOServico");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdRepresentante");

                    b.ToTable("Os", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Os_Relatorio", b =>
                {
                    b.Property<int>("IdOsRelatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOsRelatorio"));

                    b.Property<int>("IdOServico")
                        .HasColumnType("integer");

                    b.Property<int>("IdRelatorioItens")
                        .HasColumnType("integer");

                    b.Property<string>("Relatorio")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("IdOsRelatorio");

                    b.HasIndex("IdOServico");

                    b.HasIndex("IdRelatorioItens");

                    b.ToTable("Os_Relatorio", (string)null);
                });

            modelBuilder.Entity("Colex.Models.RelatorioItens", b =>
                {
                    b.Property<int>("IdRelatorioItens")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRelatorioItens"));

                    b.Property<float>("CapacidadeMaxima")
                        .HasColumnType("real");

                    b.Property<DateTime>("DataProximaRecarga")
                        .HasColumnType("date");

                    b.Property<float>("DefInstantanea")
                        .HasColumnType("real");

                    b.Property<float>("DefPermanente")
                        .HasColumnType("real");

                    b.Property<bool>("EnsaioIndPre")
                        .HasColumnType("bool");

                    b.Property<bool>("EnsaioVazVal")
                        .HasColumnType("bool");

                    b.Property<int?>("IdComponentes1")
                        .HasColumnType("integer");

                    b.Property<int?>("IdComponentes2")
                        .HasColumnType("integer");

                    b.Property<int?>("IdComponentes3")
                        .HasColumnType("integer");

                    b.Property<int?>("IdComponentes4")
                        .HasColumnType("integer");

                    b.Property<int>("IdExtintor")
                        .HasColumnType("integer");

                    b.Property<int>("IdOServico")
                        .HasColumnType("integer");

                    b.Property<bool>("InspRosca")
                        .HasColumnType("bool");

                    b.Property<string>("LaudoAR")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("MotivoRepro")
                        .HasColumnType("int");

                    b.Property<int>("NivelManutencao")
                        .HasColumnType("int");

                    b.Property<long?>("NumSelo")
                        .HasColumnType("bigint");

                    b.Property<int?>("OsIdOServico")
                        .HasColumnType("integer");

                    b.Property<float>("PerdaMassa")
                        .HasColumnType("real");

                    b.Property<float>("PesoCilindroVazio")
                        .HasColumnType("real");

                    b.Property<float>("PesoComAgua")
                        .HasColumnType("real");

                    b.Property<bool>("Pintura")
                        .HasColumnType("bool");

                    b.Property<float>("PorcEpEt")
                        .HasColumnType("real");

                    b.Property<float>("PressaoTesteCilindro")
                        .HasColumnType("real");

                    b.Property<float>("PressaoTesteMangueira")
                        .HasColumnType("real");

                    b.Property<float>("PressaoTesteManometro")
                        .HasColumnType("real");

                    b.Property<float>("PressaoTesteValvula")
                        .HasColumnType("real");

                    b.Property<float>("PressaoTrabalho")
                        .HasColumnType("real");

                    b.Property<bool>("Reaproveitado")
                        .HasColumnType("bool");

                    b.Property<float>("TaraGravada")
                        .HasColumnType("real");

                    b.Property<float>("TaraReal")
                        .HasColumnType("real");

                    b.Property<bool>("VisualIntacto")
                        .HasColumnType("bool");

                    b.Property<float>("VolumeLitros")
                        .HasColumnType("real");

                    b.HasKey("IdRelatorioItens");

                    b.HasIndex("IdComponentes1");

                    b.HasIndex("IdComponentes2");

                    b.HasIndex("IdComponentes3");

                    b.HasIndex("IdComponentes4");

                    b.HasIndex("IdExtintor");

                    b.HasIndex("IdOServico");

                    b.HasIndex("OsIdOServico");

                    b.ToTable("RelatorioItens", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Representante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<string>("Bairro")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<long>("CEP")
                        .HasColumnType("bigint");

                    b.Property<long>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<string>("Cidade")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("EnderecoSocial")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<long>("InscricaoEstadual")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("Representante", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Selo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("integer");

                    b.Property<long>("NF")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroFinal")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroInicial")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantidade")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Selo", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bool");

                    b.Property<long>("CPF")
                        .HasColumnType("bigint");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Colex.Models.Cliente", b =>
                {
                    b.HasOne("Colex.Models.Representante", "Representante")
                        .WithMany()
                        .HasForeignKey("IdRepresentante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Representante");
                });

            modelBuilder.Entity("Colex.Models.Componente", b =>
                {
                    b.HasOne("Colex.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Colex.Models.Extintor", b =>
                {
                    b.HasOne("Colex.Models.Capacidade", "Capacidade")
                        .WithMany()
                        .HasForeignKey("IdCapacidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colex.Models.MarcaExtintor", "MarcaExtintor")
                        .WithMany()
                        .HasForeignKey("IdMarcaExtintor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colex.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("IdMateriaPrima")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacidade");

                    b.Navigation("MarcaExtintor");

                    b.Navigation("MateriaPrima");
                });

            modelBuilder.Entity("Colex.Models.MateriaPrima", b =>
                {
                    b.HasOne("Colex.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Colex.Models.Orcamento", b =>
                {
                    b.HasOne("Colex.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Colex.Models.OrcamentoProduto", b =>
                {
                    b.HasOne("Colex.Models.MateriaPrima", "MateriaPrima")
                        .WithMany()
                        .HasForeignKey("IdMateriaPrima");

                    b.HasOne("Colex.Models.Orcamento", "Orcamento")
                        .WithMany()
                        .HasForeignKey("IdOrcamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MateriaPrima");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("Colex.Models.Os", b =>
                {
                    b.HasOne("Colex.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colex.Models.Representante", "Representante")
                        .WithMany()
                        .HasForeignKey("IdRepresentante");

                    b.Navigation("Cliente");

                    b.Navigation("Representante");
                });

            modelBuilder.Entity("Colex.Models.Os_Relatorio", b =>
                {
                    b.HasOne("Colex.Models.Os", "Os")
                        .WithMany()
                        .HasForeignKey("IdOServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colex.Models.RelatorioItens", "RelatorioItens")
                        .WithMany()
                        .HasForeignKey("IdRelatorioItens")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Os");

                    b.Navigation("RelatorioItens");
                });

            modelBuilder.Entity("Colex.Models.RelatorioItens", b =>
                {
                    b.HasOne("Colex.Models.Componente", "Componente1")
                        .WithMany()
                        .HasForeignKey("IdComponentes1");

                    b.HasOne("Colex.Models.Componente", "Componente2")
                        .WithMany()
                        .HasForeignKey("IdComponentes2");

                    b.HasOne("Colex.Models.Componente", "Componente3")
                        .WithMany()
                        .HasForeignKey("IdComponentes3");

                    b.HasOne("Colex.Models.Componente", "Componente4")
                        .WithMany()
                        .HasForeignKey("IdComponentes4");

                    b.HasOne("Colex.Models.Extintor", "Extintor")
                        .WithMany()
                        .HasForeignKey("IdExtintor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colex.Models.Os", "Os")
                        .WithMany()
                        .HasForeignKey("IdOServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colex.Models.Os", null)
                        .WithMany("RelatorioItens")
                        .HasForeignKey("OsIdOServico");

                    b.Navigation("Componente1");

                    b.Navigation("Componente2");

                    b.Navigation("Componente3");

                    b.Navigation("Componente4");

                    b.Navigation("Extintor");

                    b.Navigation("Os");
                });

            modelBuilder.Entity("Colex.Models.Selo", b =>
                {
                    b.HasOne("Colex.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("Colex.Models.Os", b =>
                {
                    b.Navigation("RelatorioItens");
                });
#pragma warning restore 612, 618
        }
    }
}
